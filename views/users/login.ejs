<% layout('layouts/boilerplate.ejs') %>

<div class="container-fluid py-5" style="min-height: 100vh; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); position: relative; overflow: hidden;">
  <!-- Animated Background Elements -->
  <div class="floating-shapes">
    <div class="shape shape-1"></div>
    <div class="shape shape-2"></div>
    <div class="shape shape-3"></div>
    <div class="shape shape-4"></div>
    <div class="shape shape-5"></div>
  </div>

  <!-- Sliding Background Images -->
  <div class="sliding-background">
    <div class="slide-container">
      <div class="slide-item active">
        <img src="https://images.unsplash.com/photo-1506905925346-21bda4d32df4?ixlib=rb-4.0.3&auto=format&fit=crop&w=2070&q=80" alt="Mountain Landscape" />
        <div class="slide-overlay">
          <h3>Discover Amazing Places</h3>
          <p>Find your perfect getaway destination</p>
        </div>
      </div>
      <div class="slide-item">
        <img src="https://images.unsplash.com/photo-1571896349842-33c89424de2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=2070&q=80" alt="Luxury Hotel" />
        <div class="slide-overlay">
          <h3>Luxury Accommodations</h3>
          <p>Experience comfort like never before</p>
        </div>
      </div>
      <div class="slide-item">
        <img src="https://images.unsplash.com/photo-1566073771259-6a8506099945?ixlib=rb-4.0.3&auto=format&fit=crop&w=2070&q=80" alt="Beach Resort" />
        <div class="slide-overlay">
          <h3>Beach Paradise</h3>
          <p>Wake up to stunning ocean views</p>
        </div>
      </div>
      <div class="slide-item">
        <img src="https://images.unsplash.com/photo-1520250497591-112f2f40a3f4?ixlib=rb-4.0.3&auto=format&fit=crop&w=2070&q=80" alt="City Skyline" />
        <div class="slide-overlay">
          <h3>Urban Adventures</h3>
          <p>Explore vibrant city life</p>
        </div>
      </div>
    </div>
    
    <!-- Slide Indicators -->
    <div class="slide-indicators">
      <span class="indicator active" data-slide="0"></span>
      <span class="indicator" data-slide="1"></span>
      <span class="indicator" data-slide="2"></span>
      <span class="indicator" data-slide="3"></span>
    </div>
  </div>
  
  <div class="row justify-content-center align-items-center min-vh-100">
    <div class="col-11 col-sm-9 col-md-7 col-lg-5 col-xl-4">
      <div class="card shadow-lg border-0 rounded-4 overflow-hidden login-card" style="animation: slideInUp 0.8s ease-out;">
        <!-- Header -->
        <div class="card-header bg-gradient text-white text-center py-3" style="background: linear-gradient(135deg, #fe424d 0%, #e03e45 100%); position: relative; overflow: hidden;">
          <!-- Animated background pattern -->
          <div class="header-pattern"></div>
          <div class="mb-2" style="animation: bounceIn 1s ease-out 0.3s both;">
            <i class="fas fa-compass fa-3x" style="animation: rotate 2s linear infinite;"></i>
          </div>
          <h2 class="fw-bold mb-0" style="animation: fadeInDown 0.8s ease-out 0.5s both;">Welcome Back</h2>
          <p class="mb-0 opacity-75" style="animation: fadeInUp 0.8s ease-out 0.7s both;">Sign in to your GlobeStay account</p>
        </div>

        <!-- Body -->
        <div class="card-body p-3 p-md-4">
          <!-- Flash messages -->
          <% if (locals.error) { %>
          <div class="alert alert-danger alert-dismissible fade show border-0 rounded-3" role="alert">
            <i class="fas fa-exclamation-triangle me-2"></i>
            <%= error %>
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
          </div>
          <% } %> 
          <% if (locals.success) { %>
          <div class="alert alert-success alert-dismissible fade show border-0 rounded-3" role="alert">
            <i class="fas fa-check-circle me-2"></i>
            <%= success %>
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
          </div>
          <% } %>

          <form action="/login" method="POST" class="needs-validation" novalidate>
            <!-- Username -->
            <div class="mb-4" style="animation: slideInLeft 0.8s ease-out 0.9s both;">
              <label for="username" class="form-label fw-medium text-dark">
                <i class="fas fa-user me-2 text-primary"></i>Username
              </label>
              <input
                type="text"
                name="username"
                id="username"
                class="form-control form-control-lg border-2 rounded-3 animated-input"
                placeholder="Enter your username"
                required
                style="border-color: #e9ecef; transition: all 0.3s ease;"
                onfocus="this.style.borderColor='#fe424d'; this.style.boxShadow='0 0 0 0.2rem rgba(254, 66, 77, 0.25)'; this.style.transform='scale(1.02)'"
                onblur="this.style.borderColor='#e9ecef'; this.style.boxShadow='none'; this.style.transform='scale(1)'"
              />
              <div class="invalid-feedback">
                <i class="fas fa-exclamation-circle me-1"></i>Please enter your username.
              </div>
            </div>

            <!-- Password -->
            <div class="mb-4" style="animation: slideInRight 0.8s ease-out 1.1s both;">
              <label for="password" class="form-label fw-medium text-dark">
                <i class="fas fa-lock me-2 text-primary"></i>Password
              </label>
              <div class="position-relative">
                <input
                  type="password"
                  name="password"
                  id="password"
                  class="form-control form-control-lg border-2 rounded-3 animated-input"
                  placeholder="Enter your password"
                  required
                  style="border-color: #e9ecef; transition: all 0.3s ease;"
                  onfocus="this.style.borderColor='#fe424d'; this.style.boxShadow='0 0 0 0.2rem rgba(254, 66, 77, 0.25)'; this.style.transform='scale(1.02)'"
                  onblur="this.style.borderColor='#e9ecef'; this.style.boxShadow='none'; this.style.transform='scale(1)'"
                />
                <button type="button" class="btn btn-link position-absolute end-0 top-50 translate-middle-y me-3" 
                        onclick="togglePassword()" style="z-index: 10; transition: all 0.3s ease;"
                        onmouseover="this.style.transform='translateY(-50%) scale(1.1)'"
                        onmouseout="this.style.transform='translateY(-50%) scale(1)'">
                  <i class="fas fa-eye" id="toggleIcon"></i>
                </button>
              </div>
              <div class="invalid-feedback">
                <i class="fas fa-exclamation-circle me-1"></i>Please enter your password.
              </div>
            </div>

            <!-- Login Button -->
            <div class="d-grid mb-4" style="animation: fadeInUp 0.8s ease-out 1.3s both;">
              <button type="submit" class="btn btn-danger btn-lg rounded-3 fw-bold py-3 animated-button" 
                      style="background: linear-gradient(135deg, #fe424d 0%, #e03e45 100%); border: none; transition: all 0.3s ease; position: relative; overflow: hidden;"
                      onmouseover="this.style.transform='translateY(-2px)'; this.style.boxShadow='0 8px 25px rgba(254, 66, 77, 0.4)'"
                      onmouseout="this.style.transform='translateY(0)'; this.style.boxShadow='none'">
                <span class="button-text">
                  <i class="fas fa-sign-in-alt me-2"></i>LogIn
                </span>
                <div class="button-ripple"></div>
              </button>
            </div>

            <!-- Divider -->
            <div class="text-center mb-4" style="animation: fadeIn 0.8s ease-out 1.5s both;">
              <hr class="my-4">
              <span class="text-muted bg-white px-3">or</span>
            </div>

            <!-- Google Login Button -->
            <div class="d-grid mb-4" style="animation: fadeInUp 0.8s ease-out 1.6s both;">
              <a href="/auth/google" class="btn btn-outline-danger btn-lg rounded-3 fw-bold py-3 d-flex align-items-center justify-content-center" 
                 style="border: 2px solid #fe424d; color: #fe424d; transition: all 0.3s ease; text-decoration: none;"
                 onmouseover="this.style.backgroundColor='#fe424d'; this.style.color='white'; this.style.transform='translateY(-2px)'; this.style.boxShadow='0 8px 25px rgba(254, 66, 77, 0.4)'"
                 onmouseout="this.style.backgroundColor='transparent'; this.style.color='#fe424d'; this.style.transform='translateY(0)'; this.style.boxShadow='none'">
                <img src="https://developers.google.com/identity/images/g-logo.png" alt="Google" style="width: 20px; height: 20px; margin-right: 12px;">
                <span>Continue with Google</span>
              </a>
            </div>

            <!-- Sign Up Link -->
            <div class="text-center" style="animation: fadeInUp 0.8s ease-out 1.7s both;">
              <p class="text-muted mb-0">
                Don't have an account? 
                <a href="/signup" class="text-decoration-none fw-bold animated-link" 
                   style="color: #fe424d; transition: all 0.3s ease; position: relative;"
                   onmouseover="this.style.color='#e03e45'; this.style.transform='scale(1.05)'"
                   onmouseout="this.style.color='#fe424d'; this.style.transform='scale(1)'">
                  Create one now
                </a>
              </p>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  // Password toggle functionality
  function togglePassword() {
    const passwordInput = document.getElementById('password');
    const toggleIcon = document.getElementById('toggleIcon');
    
    if (passwordInput.type === 'password') {
      passwordInput.type = 'text';
      toggleIcon.classList.remove('fa-eye');
      toggleIcon.classList.add('fa-eye-slash');
    } else {
      passwordInput.type = 'password';
      toggleIcon.classList.remove('fa-eye-slash');
      toggleIcon.classList.add('fa-eye');
    }
  }

  // Button ripple effect
  function createRipple(event) {
    const button = event.currentTarget;
    const ripple = button.querySelector('.button-ripple');
    
    if (ripple) {
      ripple.style.left = event.clientX - button.offsetLeft + 'px';
      ripple.style.top = event.clientY - button.offsetTop + 'px';
      ripple.style.animation = 'ripple 0.6s linear';
      
      setTimeout(() => {
        ripple.style.animation = 'none';
      }, 600);
    }
  }

  // Add ripple effect to buttons
  document.addEventListener('DOMContentLoaded', function() {
    const buttons = document.querySelectorAll('.animated-button');
    buttons.forEach(button => {
      button.addEventListener('click', createRipple);
    });
  });

  // Sliding Background Functionality
  let currentSlide = 0;
  const slides = document.querySelectorAll('.slide-item');
  const indicators = document.querySelectorAll('.indicator');
  const totalSlides = slides.length;

  function showSlide(index) {
    // Remove active class from all slides and indicators
    slides.forEach(slide => slide.classList.remove('active'));
    indicators.forEach(indicator => indicator.classList.remove('active'));
    
    // Add active class to current slide and indicator
    slides[index].classList.add('active');
    indicators[index].classList.add('active');
    
    currentSlide = index;
  }

  function nextSlide() {
    currentSlide = (currentSlide + 1) % totalSlides;
    showSlide(currentSlide);
  }

  function prevSlide() {
    currentSlide = (currentSlide - 1 + totalSlides) % totalSlides;
    showSlide(currentSlide);
  }

  // Auto-slide functionality
  function startAutoSlide() {
    setInterval(nextSlide, 5000); // Change slide every 5 seconds
  }

  // Initialize slideshow
  document.addEventListener('DOMContentLoaded', function() {
    if (slides.length > 0) {
      showSlide(0);
      startAutoSlide();
      
      // Add click handlers to indicators
      indicators.forEach((indicator, index) => {
        indicator.addEventListener('click', () => showSlide(index));
      });
      
      // Add touch/swipe support for mobile
      let startX = 0;
      let endX = 0;
      
      document.addEventListener('touchstart', (e) => {
        startX = e.touches[0].clientX;
      });
      
      document.addEventListener('touchend', (e) => {
        endX = e.changedTouches[0].clientX;
        handleSwipe();
      });
      
      function handleSwipe() {
        const threshold = 50;
        const diff = startX - endX;
        
        if (Math.abs(diff) > threshold) {
          if (diff > 0) {
            nextSlide(); // Swipe left - next slide
          } else {
            prevSlide(); // Swipe right - previous slide
          }
        }
      }
    }
  });

  // Form validation
  (() => {
    "use strict";
    const forms = document.querySelectorAll(".needs-validation");
    Array.from(forms).forEach((form) => {
      form.addEventListener(
        "submit",
        (event) => {
          if (!form.checkValidity()) {
            event.preventDefault();
            event.stopPropagation();
          }
          form.classList.add("was-validated");
        },
        false
      );
    });
  })();
</script>
